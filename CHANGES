
0.004

  * Removed the internal copies of the Scrape::USPS::ZipLookup
    modules and added a dependency on that module to Makefile.PL.

  * Removed the examples directory, because it belongs with
    Scrape::USPS::ZipLookup.

  * NOTE: This is expected to be the last version of this module.
    Future development will occur in Scrape::USPS::ZipLookup.


0.003

  * Reorganized the code to have all the *.pm files nested under
    the lib/ directory and moved the tests under the t/ directory.

  * Added some examples in the examples/ directory.

  * Updated based on the latest form at the USPS web site.

  * Updated to handle results of more than one matching address.

  * Deprecated the Data::Address::Standardize interface in
    preparation for moving completely to the the new
    Scrape::USPS::ZipLookup namespace.

    The Data::Address::Standardize namespace will soon become
    available for implementing the address standardization
    algorithms without scraping (much as service bureaus do for
    a fee today).

    This will be the next to the last release of this code under
    this name. It will be followed immediately by a release of
    the Scrape::USPS::ZipLookup modules and then a version of
    Data::Address::Standardize without the Scrape::* modules
    bundled, but with a Makefile.PL requirement for them to be
    present.


0.002

  * Fixed the regular expression for working with zip codes so it
    won't be fooled by forms like '9999 NW 32ND ST'. The old RE
	was looking for two characters followed by some digits. The new
	RE is looking for two letters followed by a form like 99999 or
	99999-9999.

  * Added a $Data::Address::Standardize::verbose variable. If it is
    set to true, then the input, HTTP request, HTTP response, and
	output are all printed for each standardization. Added a line
	in test.pl to set this, although it is commented out.

  * Added code to test.pl to actually test the results rather than
    just pretending they are ok.

  * Added another test with an apartment number.

  * Added a test that is supposed to fail.

  * Made it return an empty array if there is an error.

  * Split the tests into the file tries.dat.


0.001

  * This was the first version inflicted upon the public.

